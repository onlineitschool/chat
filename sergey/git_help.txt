git add	f1.txt	добавить файл в индекс
git add --all	добавить все файлы в папке в индекс
git add .	добавить все файлы в индекс	???

git commit -m "Sergey 3"	Запись изменений из индекса в репозиторий
git log		посмотреть список комитов

git pull      Извлечение изменений
git push      Загрузка изменений на сервер

Полезные ссылки
https://www.youtube.com/watch?v=O00FTZDxD0o&t=1031s

whoami	показывает мой логин
cd ~	перейти в домашнюю папку
mkdir my-project	создание новой папки
cd ~/Desktop	переход в папку
echo "some text" > file.txt		создание файла с текстом
pwd	показать текущую рабочую папку
clear	очистить окно терминала

ls 	показать список файлов	
ls -l	в виде подробного списка
ls -la	в виде подробного списка, включая скрытые файлы
cat id_rsa.pub	показать содержимое текстового файла
rm file.txt	удаление файла

ssh-keygen -b 4096	сгенирировать приватный и публичный ключ

git --version		показать версию git
git version 2.39.0.windows.2

git config --global --get user.name	- показать имя автора в конфигурации
SergSergNN

git config --global --get user.email	- показать email автора в конфигурации
sergnech.sw@gmail.com

Ctrl +/-	увеличить/уменьшить шрифт
git config --global --get user.name SergSergNN		-задать имя автора, нужно заключить в кавычки, если из нескольких слов
git config --global --get user.email sergnech.sw@gmail.com	-задать email автора

git config --list				паоказать конфигурацию

git clone git@github.com:onlineitschool/calculator-pub.git
git clone git@github.com:onlineitschool/calculator-pub.git
git clone git@github.com:onlineitschool/chat.git

git init	создать новый репозиторий в текуще папке
git status	Вывод состояния рабочего каталога. Показывает состояние индекса

git restore f2.txt	восстановить измененный файл из индекса

git cat-file -t 1a3da2b641d3e50f79fb93418ad5f2863a259e96	Посмотреть тип объккта в git (blob,commit,tree,tag)
git cat-file -s 1a3da2b641d3e50f79fb93418ad5f2863a259e96	Посмотреть размер объккта в git
git cat-file -p 1a3da2b641d3e50f79fb93418ad5f2863a259e96	Посмотреть содержимое объккта в git

git checkout 6a5517f5e87c5a1e2930f2836c818d6096bd3cd1
	перейти к определенной версии проекта. Объекты из репозитория перемещаются в рабочую папку.
	Хэш берется из git log

git checkout master	перейти к ветке. Ветка всегда указывает на последний коммит.
git checkout -b nameB	создать новую ветку и перейти в нее
git branch nameB	создать новую ветку
git branch	показать список веток
git branch -a	показать список веток, включая другие ветки созданные на других серверах
git branch -vv		показать, как локальная ветка связана с веткой на удаленном сервере
* main 6cd4f43 [origin/main] rr

git remote	показать подключенные удаленные сервера
git push -u orign main		- загрузить данные из локального репозитория в удаленный push
		main - название ветки на удаленном сервере
		связывает текущую ветку на локальном сервере с веткой main на удаленном сервере

git branch -m new_name		переименовать текущую ветку
git branch -d new_name		удалить ветку. Текущую ветку удалить нельзя. Можно удалить только другую ветку.
git merge nameB		слияние веток. Добавление в текущую ветку другой ветки

статусы файлов
	untracked	неотслеживаемый	файл еще не добавлялся в индекс и не сохранялись изменения
	staged		подготовленный. Файл добавлен в индекс. Но еще не в репозитории
	Unmodifed	файл находится в репозитории и не менялся в рабочей папке. В репозитории и в рабочей папке находится один и тот же файл
	Modifed		файл изменен по сравнению с его версией в репозитории


использование: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

Стандартные команды Git используемые в различных ситуациях:

создание рабочей области (смотрите также: git help tutorial)
   clone     Клонирование репозитория в новый каталог
   init      Создание пустого репозитория Git или переинициализация существующего

работа с текущими изменениями (смотрите также: git help everyday)
   add       Добавление содержимого файла в индекс
   mv        Перемещение или переименование файла, каталога или символьной ссылки
   restore   Восстановление файлов в рабочем каталоге
   rm        Удаление файлов из рабочего каталога и индекса

просмотр истории и текущего состояния (смотрите также: git help revisions)
   bisect    Выполнение двоичного поиска коммита, который вносит ошибку
   diff      Вывод разницы между коммитами, коммитом и рабочим каталогом и т.д.
   grep      Вывод строк, соответствующих шаблону
   log       Вывод истории коммитов
   show      Вывод различных типов объектов
   status    Вывод состояния рабочего каталога

выращивание, маркировка и правка вашей общей истории
   branch    Вывод списка, создание или удаление веток
   commit    Запись изменений в репозиторий
   merge     Объединение одной или нескольких историй разработки вместе
   rebase    Повторное применение коммитов над верхушкой другой ветки
   reset     Сброс текущего состояния HEAD на указанное состояние
   switch    Переключение веток
   tag       Создание, вывод списка, удаление или проверка метки, подписанной с помощью GPG

совместная работа (смотрите также: git help workflows)
   fetch     Загрузка объектов и ссылок из другого репозитория
   pull      Извлечение изменений и объединение с другим репозиторием или локальной веткой
   push      Обновление внешних ссылок и связанных объектов

«git help -a» и «git help -g» выводит список доступных подкоманд
и небольшую справку по понятиям. Смотрите «git help <понятие>»
или «git help <термин>» чтобы узнать больше о конкретной подкоманде
или понятии.
Смотрите «git help git» для получения общего обзора системы.
